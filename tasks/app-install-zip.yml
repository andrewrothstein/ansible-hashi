---
- name: resolving vars for {{ hashi_app.name }}:{{ hashi_app.ver }}{% if 'meta' in hashi_app %}+{{ hashi_app.meta }}{% endif %}
  include_vars:
    file: app-install-zip-vars.yml
- name: looking for install directory {{ hashi_app_install_dir }}
  stat:
    path: '{{ hashi_app_install_dir }}'
  register: hashi_app_install_binary
- when: not hashi_app_install_binary.stat.exists
  block:
    - name: creating {{ hashi_app_install_dir }}
      become: '{{ hashi_elevate }}'
      become_user: root
      file:
        name: '{{ hashi_app_install_dir }}'
        state: directory
        mode: 0755
    - name: downloading {{ hashi_app_install_url }} to {{ hashi_app_tmp_zip }}
      become: '{{ hashi_elevate }}'
      become_user: root
      get_url:
        url: '{{ hashi_app_install_url }}'
        dest: '{{ hashi_app_tmp_zip }}'
        checksum: 'sha256:{{ hashi_app_install_checksums_url }}'
    - name: unzipping {{ hashi_app_tmp_zip }} to {{ hashi_app_install_dir }}
      become: '{{ hashi_elevate }}'
      become_user: root
      unarchive:
        remote_src: true
        src: '{{ hashi_app_tmp_zip }}'
        dest: '{{ hashi_app_install_dir }}'
        creates: '{{ hashi_app_install_exe }}'
  always:
    - name: cleaning up {{ hashi_app_tmp_zip }}
      become: '{{ hashi_elevate }}'
      become_user: root
      file:
        path: '{{ hashi_app_tmp_zip }}'
        state: absent
- name: linking executables for {{ hashi_app.name }}:{{ hashi_app_eff_ver }}
  become: '{{ hashi_elevate }}'
  become_user: root
  with_items: '{{ hashi_app_install_links }}'
  file:
    state: link
    src: '{{ hashi_app_install_exe }}'
    dest: '{{ item }}'
